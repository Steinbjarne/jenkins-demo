#!/usr/bin/env bash

checkLabel() {
    local label=$1
    local nodeId=$2
    value=$(docker node inspect ${nodeId} | jq ".[].Spec.Labels.\"${label}\"") || { echo "Failed to inspect node"; return 1; }
    [[ 'null' == ${value} ]] && {
        read -p "Node label '${label}' not set. Set it? [Y/n] " answer
        [[ -z ${answer} ]] && answer='y'
        [[ ${answer} =~ [yY] ]] && { docker node update ${nodeId} --label-add ${label}=true; } || { echo "Failed to create label"; return 1; }
    } || return 0
}

docker node ls 2>&1 >/dev/null || {
    read -p "Enable swarm mode in Docker? [Y/n] " answer
    [[ -z ${answer} ]] && answer='y'
    [[ ${answer} =~ [yY] ]] && { docker swarm init; } || { exit 1; }
}

nodeId=$(docker node inspect self | jq -r ".[].ID") || exit 1
checkLabel jenkins-slave ${nodeId} || exit 1
checkLabel jenkins-master ${nodeId} || exit 1
checkLabel nexus ${nodeId} || exit 1

[[ -z $(docker secret ls -q) ]] && {
    read -p "No secrets found in Docker's vault. Create dummy secrets? [Y/n] " answer
    [[ -z ${answer} ]] && answer='y'
    [[ ${answer} =~ [yY] ]] && { utils/create-dummy-secrets; } || { exit 1; }
}

[[ -z $(docker config ls -qf name=pipeline-jobs) ]] && {
    read -p "Configuration 'pipeline-jobs' not found in Docker. Create config with job for this project? [Y/n] " answer
    [[ -z ${answer} ]] && answer='y'
    [[ ${answer} =~ [yY] ]] && { utils/create-jobs-config; } || { exit 1; }
}

[[ -z $(docker config ls -qf name=pipeline-config) ]] && {
    read -p "Configuration 'pipeline-config' not found in Docker. Create dummy config? [Y/n] " answer
    [[ -z ${answer} ]] && answer='y'
    [[ ${answer} =~ [yY] ]] && { utils/create-config; } || { exit 1; }
}

mvn package || exit 1
docker/build-images local || exit 1
stackFile="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/stack.yml"
REGISTRY=local VERSION=latest docker stack deploy --prune --resolve-image never -c ${stackFile} pipeline
